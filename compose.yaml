# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

services:
  server:
    build:
      context: .
    container_name: server-1-chatapp
    restart: no
    environment:
      HOST: 127.0.0.1
      NODE_ENV: production
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb-chatapp:27017/chatapp?authSource=${MONGO_INITDB_ROOT_USERNAME}
      REDIS_HOST: redis-chatapp
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
    volumes:
      - ./logs.txt:/usr/src/app/logs.txt
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - express-mongo
      - express-redis
      - express-localtonet
      - express-alpine
    cpus: 0.5
    mem_limit: 512m

  mongodb:
    image: mongo:latest
    container_name: mongodb-chatapp
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    networks:
      - express-mongo
    volumes:
      - mongo_data:/data/db
    cpus: 0.5
    mem_limit: 512m

  redis:
    image: redis:latest
    container_name: redis-chatapp
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - express-redis
    cpus: 0.5
    mem_limit: 1g
  localtonet:
    image: localtonet/localtonet:latest
    container_name: localtonet-chatapp
    restart: unless-stopped
    env_file:
      - .env
    command: ["authtoken", "${LOCALTONET_TOKEN}"]
    networks:
      - express-localtonet
    cpus: 0.25
    mem_limit: 64m
  alpine:
    image: alpine:latest
    container_name: alpine-network-chatapp
    command: ["tail", "-f", "/dev/null"]
    restart: no
    networks:
      - express-mongo
      - express-redis
      - express-localtonet
      - express-alpine
    cpus: 0.25
    mem_limit: 32m

networks:
  express-mongo:
  express-redis:
  express-localtonet:
  express-alpine:

volumes:
  mongo_data: